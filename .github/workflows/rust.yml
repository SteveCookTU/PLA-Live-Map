name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-2022]
        include:
        - os: ubuntu-latest
          FILE: libpla_live_map_lib.so
          OUT: pla_live_map_lib.so
          
        - os: windows-2022
          FILE: pla_live_map_lib.dll
          OUT: pla_live_map_lib.pyd
          
    steps:
    - uses: actions/checkout@v2
    - name: Build Release
      run: |
        cd pla_live_map_lib
        cargo build --release
        cd ${{ github.workspace }}/pla_live_map_lib/target/release/
        echo ${{ matrix.FILE }}
        echo ${{ matrix.OUT }}
        mv "${{ matrix.FILE }}" "${{ matrix.OUT }}"
        
    - uses: actions/upload-artifact@v2
      with:
        name: pla_live_map_lib-${{ matrix.os }}
        path: |
          ${{ github.workspace }}/pla_live_map_lib/target/release/*.so
          ${{ github.workspace }}/pla_live_map_lib/target/release/*.pyd
